buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
	    classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
	    classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.6'
	    classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}

def versionTxt = file('version.txt')
version = versionTxt.exists() ? versionTxt.text.trim() : '0.1'
group = 'org.grails.plugins'

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: 'com.bertramlabs.asset-pipeline'
apply plugin: "org.grails.grails-gsp"
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'com.jfrog.artifactory'

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"

    testCompile "org.grails:grails-web-testing-support"

    compile "org.grails.plugins:spring-security-core:$springSecurityCoreVersion"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

apply from: 'gradle/grailsPublish.gradle'
apply from: 'gradle/artifactoryPublish.gradle'
apply from: 'gradle/docs.gradle'

assets {
    packagePlugin = true
}

test {
    systemProperties System.properties
}
apply from: 'gradle/testVerbose.gradle'
